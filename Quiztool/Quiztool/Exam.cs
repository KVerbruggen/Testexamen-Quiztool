//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quiztool
{
    using System;
    using System.Collections.Generic;
    
    public partial class Exam
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Exam()
        {
            this.ExamTopics = new HashSet<ExamTopic>();
        }
    
        public int Id { get; set; }
        public string Name { get; set; }
        public Nullable<short> Timelimit { get; set; }
        public Nullable<short> Minimumscore { get; set; }
        public byte GenerateMethod { get; set; }
        public short GenerateInput { get; set; }
        public Nullable<byte> MinimumTopicsPassed { get; set; }
        public bool IsHidden { get; set; }
        public int NQuestions { get; set; }
    
        public virtual Subject Subject { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ExamTopic> ExamTopics { get; set; }

        public override string ToString()
        {
            return this.Name;
        }

        public int GetTotalQuestions()
        {
            int questions = 0;
            foreach (ExamTopic examTopic in ExamTopics)
            {
                questions += examTopic.Topic.Questions.Count;
            }
            return questions;
        }

        public string GetTopicsAsString()
        {
            string topics = String.Empty;
            bool first = true;
            foreach (ExamTopic examTopic in ExamTopics)
            {
                if (first)
                {
                    first = false;
                }
                else
                {
                    topics += ", ";
                }
                topics += examTopic.Topic.Name;
            }
            return topics;
        }

        public int GetMaxScore()
        {
            if (GenerateMethod == 1)
            {
                return GenerateInput;
            }
            else
            {
                return 0;
            }
        }
    }
}
